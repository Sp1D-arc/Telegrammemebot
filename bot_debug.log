2025-02-18 10:27:40,119 - asyncio - ERROR - Task was destroyed but it is pending!
task: <Task pending name='Task-64' coro=<send_memes() running at bot.py:536> wait_for=<Future pending cb=[<TaskWakeupMethWrapper object at 0x05DD6598>()]>>
2025-02-18 11:54:46,998 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 11:55:45,477 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 11:56:22,244 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 11:56:24,716 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 11:57:10,031 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 11:57:13,299 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 11:58:28,100 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 11:58:31,891 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 11:59:26,830 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 11:59:34,090 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 12:00:55,408 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 12:00:58,402 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 12:31:40,233 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 12:31:47,048 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 12:33:06,637 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 12:33:25,919 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: 
2025-02-18 12:33:25,931 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\asyncio\proactor_events.py", line 280, in _loop_reading
    data = fut.result()
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\asyncio\windows_events.py", line 808, in _poll
    value = callback(transferred, key, ov)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\asyncio\windows_events.py", line 453, in finish_recv
    return ov.getresult()
ConnectionAbortedError: [WinError 1236] Подключение к сети было разорвано локальной системой

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 34, in read
    return await self._stream.receive(max_bytes=max_bytes)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\streams\tls.py", line 195, in receive
    data = await self._call_sslobject_method(self._ssl_object.read, max_bytes)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\streams\tls.py", line 137, in _call_sslobject_method
    data = await self.transport_stream.receive()
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_backends\_asyncio.py", line 1274, in receive
    raise self._protocol.exception
anyio.BrokenResourceError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 253, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 90, in handle_async_request
    return await self._connection.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\http11.py", line 112, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\http11.py", line 91, in handle_async_request
    ) = await self._receive_response_headers(**kwargs)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\http11.py", line 155, in _receive_response_headers
    event = await self._receive_event(timeout=timeout)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\http11.py", line 191, in _receive_event
    data = await self._network_stream.read(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 36, in read
    return b""
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 327, in polling_action_cb
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 3584, in get_updates
    await self._post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 422, in _post
    return await self._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 453, in _do_post
    return await request.post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: 
2025-02-18 12:44:30,519 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:44:30,521 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 496, in getaddrinfo
    gai_res = await get_asynclib().getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_backends\_asyncio.py", line 1754, in getaddrinfo
    result = await get_running_loop().getaddrinfo(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\asyncio\base_events.py", line 817, in getaddrinfo
    return await self.run_in_executor(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\concurrent\futures\thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\socket.py", line 914, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11002] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 253, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 86, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 327, in polling_action_cb
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 3584, in get_updates
    await self._post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 422, in _post
    return await self._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 453, in _do_post
    return await request.post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:44:31,531 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:44:31,533 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 496, in getaddrinfo
    gai_res = await get_asynclib().getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_backends\_asyncio.py", line 1754, in getaddrinfo
    result = await get_running_loop().getaddrinfo(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\asyncio\base_events.py", line 817, in getaddrinfo
    return await self.run_in_executor(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\concurrent\futures\thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\socket.py", line 914, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11002] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 253, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 86, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 327, in polling_action_cb
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 3584, in get_updates
    await self._post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 422, in _post
    return await self._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 453, in _do_post
    return await request.post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:44:37,620 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:44:37,624 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 496, in getaddrinfo
    gai_res = await get_asynclib().getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_backends\_asyncio.py", line 1754, in getaddrinfo
    result = await get_running_loop().getaddrinfo(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\asyncio\base_events.py", line 817, in getaddrinfo
    return await self.run_in_executor(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\concurrent\futures\thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\socket.py", line 914, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11002] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 253, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 86, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 327, in polling_action_cb
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 3584, in get_updates
    await self._post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 422, in _post
    return await self._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 453, in _do_post
    return await request.post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:44:39,882 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:44:39,884 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 496, in getaddrinfo
    gai_res = await get_asynclib().getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_backends\_asyncio.py", line 1754, in getaddrinfo
    result = await get_running_loop().getaddrinfo(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\asyncio\base_events.py", line 817, in getaddrinfo
    return await self.run_in_executor(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\concurrent\futures\thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\socket.py", line 914, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11002] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 253, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 86, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 327, in polling_action_cb
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 3584, in get_updates
    await self._post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 422, in _post
    return await self._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 453, in _do_post
    return await request.post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:49:50,063 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:49:50,065 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 496, in getaddrinfo
    gai_res = await get_asynclib().getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_backends\_asyncio.py", line 1754, in getaddrinfo
    result = await get_running_loop().getaddrinfo(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\asyncio\base_events.py", line 817, in getaddrinfo
    return await self.run_in_executor(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\concurrent\futures\thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\socket.py", line 914, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11002] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 253, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 86, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 327, in polling_action_cb
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 3584, in get_updates
    await self._post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 422, in _post
    return await self._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 453, in _do_post
    return await request.post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:49:51,065 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:49:51,067 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 496, in getaddrinfo
    gai_res = await get_asynclib().getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_backends\_asyncio.py", line 1754, in getaddrinfo
    result = await get_running_loop().getaddrinfo(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\asyncio\base_events.py", line 817, in getaddrinfo
    return await self.run_in_executor(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\concurrent\futures\thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\socket.py", line 914, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11002] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 253, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 86, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 327, in polling_action_cb
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 3584, in get_updates
    await self._post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 422, in _post
    return await self._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 453, in _do_post
    return await request.post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:49:52,577 - telegram.ext._updater - ERROR - Error while getting Updates: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:49:52,578 - telegram.ext._application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 10, in map_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 189, in connect_tcp
    gai_res = await getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_core\_sockets.py", line 496, in getaddrinfo
    gai_res = await get_asynclib().getaddrinfo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\anyio\_backends\_asyncio.py", line 1754, in getaddrinfo
    result = await get_running_loop().getaddrinfo(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\asyncio\base_events.py", line 817, in getaddrinfo
    return await self.run_in_executor(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\concurrent\futures\thread.py", line 57, in run
    result = self.fn(*self.args, **self.kwargs)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\socket.py", line 914, in getaddrinfo
    for res in _socket.getaddrinfo(host, port, family, type, proto, flags):
socket.gaierror: [Errno 11002] getaddrinfo failed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 60, in map_httpcore_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 253, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 237, in handle_async_request
    response = await connection.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 86, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 63, in handle_async_request
    stream = await self._connect(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 111, in _connect
    stream = await self._network_backend.connect_tcp(**kwargs)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\auto.py", line 29, in connect_tcp
    return await self._backend.connect_tcp(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\backends\asyncio.py", line 111, in connect_tcp
    stream: anyio.abc.ByteStream = await anyio.connect_tcp(
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc)
httpcore.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 183, in do_request
    res = await self._client.request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1533, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1620, in send
    response = await self._send_handling_auth(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1648, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1685, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1722, in _send_single_request
    response = await transport.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 353, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 77, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ConnectError: [Errno 11002] getaddrinfo failed

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 600, in _network_loop_retry
    if not await action_cb():
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 327, in polling_action_cb
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 312, in polling_action_cb
    updates = await self.bot.get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 524, in get_updates
    updates = await super().get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 334, in decorator
    result = await func(*args, **kwargs)  # skipcq: PYL-E1102
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 3584, in get_updates
    await self._post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 422, in _post
    return await self._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 306, in _do_post
    return await super()._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 453, in _do_post
    return await request.post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 165, in post
    result = await self._request_wrapper(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 288, in _request_wrapper
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 274, in _request_wrapper
    code, payload = await self.do_request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 204, in do_request
    raise NetworkError(f"httpx HTTPError: {err}") from err
telegram.error.NetworkError: httpx HTTPError: [Errno 11002] getaddrinfo failed
2025-02-18 12:52:05,526 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 12:52:10,086 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 12:57:10,063 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 12:58:39,204 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 12:58:40,152 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 12:59:17,230 - root - INFO - Инициализация бота...
2025-02-18 12:59:17,324 - root - INFO - Начало polling...
2025-02-18 12:59:19,107 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 12:59:52,565 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 13:00:09,311 - root - INFO - Инициализация бота...
2025-02-18 13:00:09,391 - root - INFO - Начало polling...
2025-02-18 13:00:10,782 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 13:03:11,236 - root - INFO - Инициализация бота...
2025-02-18 13:03:11,380 - root - INFO - Начало polling...
2025-02-18 13:03:12,830 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 13:08:57,056 - root - INFO - Настройка логирования завершена
2025-02-18 13:10:17,041 - root - INFO - Настройка логирования завершена
2025-02-18 13:12:02,795 - root - INFO - Настройка логирования завершена
2025-02-18 13:13:08,080 - root - INFO - Настройка логирования завершена
2025-02-18 13:13:52,777 - root - INFO - Настройка логирования завершена
2025-02-18 13:15:20,772 - root - INFO - Настройка логирования завершена
2025-02-18 13:15:21,966 - root - INFO - Инициализация бота
2025-02-18 13:15:22,367 - root - INFO - Начало polling
2025-02-18 13:15:24,210 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 13:15:38,732 - root - INFO - Начало процесса получения мема
2025-02-18 13:16:09,704 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 13:17:41,145 - root - INFO - Настройка логирования завершена
2025-02-18 13:17:42,757 - root - INFO - Инициализация бота
2025-02-18 13:17:43,074 - root - INFO - Начало polling
2025-02-18 13:17:44,674 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 13:17:54,289 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 13:18:55,764 - root - INFO - Настройка логирования завершена
2025-02-18 13:18:57,023 - root - INFO - Инициализация бота
2025-02-18 13:18:57,674 - root - INFO - Начало polling
2025-02-18 13:18:59,135 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 13:19:11,444 - root - INFO - Начало обработки команды /meme
2025-02-18 13:19:11,445 - root - INFO - Начало процесса получения мема
2025-02-18 13:19:37,760 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 13:24:02,478 - root - INFO - Настройка логирования завершена
2025-02-18 13:24:03,687 - root - INFO - Инициализация бота
2025-02-18 13:24:04,033 - root - INFO - Начало polling
2025-02-18 13:24:05,769 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 13:24:31,849 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 13:26:13,856 - root - INFO - Настройка логирования завершена
2025-02-18 13:26:58,559 - root - INFO - Настройка логирования завершена
2025-02-18 13:27:31,448 - root - INFO - Настройка логирования завершена
2025-02-18 13:27:32,597 - root - INFO - Инициализация бота
2025-02-18 13:27:32,903 - root - INFO - Начало polling
2025-02-18 13:27:34,365 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 13:28:39,794 - root - INFO - Начало процесса получения мема
2025-02-18 13:28:49,924 - root - INFO - Начало процесса получения мема
2025-02-18 13:28:58,858 - root - INFO - Начало процесса получения мема
2025-02-18 13:29:07,406 - root - INFO - Начало процесса получения мема
2025-02-18 13:29:28,871 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 13:38:22,436 - root - INFO - Настройка логирования завершена
2025-02-18 13:38:23,648 - root - INFO - Инициализация бота
2025-02-18 13:38:24,335 - root - INFO - Начало polling
2025-02-18 13:38:26,041 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 13:39:24,527 - root - INFO - Начало процесса получения мема
2025-02-18 13:39:34,031 - root - INFO - Начало процесса получения мема
2025-02-18 13:39:48,732 - root - INFO - Начало процесса получения мема
2025-02-18 13:39:58,174 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_application.py", line 1335, in process_update
    await coroutine
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_handlers\basehandler.py", line 158, in handle_update
    return await self.callback(update, context)
  File "c:\nsda\Telegrammemebot\handlers\meme_handlers.py", line 63, in hentai_meme_command
    await update.message.reply_photo(photo=meme['url'], caption=caption)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_message.py", line 2166, in reply_photo
    return await self.get_bot().send_photo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 2959, in send_photo
    return await super().send_photo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 1402, in send_photo
    return await self._send_message(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 610, in _send_message
    result = await super()._send_message(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 745, in _send_message
    result = await self._post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 623, in _post
    return await self._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 355, in _do_post
    return await super()._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 652, in _do_post
    result = await request.post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 201, in post
    result = await self._request_wrapper(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 382, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Wrong type of the web page content
2025-02-18 13:39:58,234 - root - INFO - Начало процесса получения мема
2025-02-18 13:40:07,205 - root - INFO - Начало процесса получения мема
2025-02-18 13:40:19,063 - root - INFO - Начало процесса получения мема
2025-02-18 13:40:34,548 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:12:35,444 - root - INFO - Настройка логирования завершена
2025-02-18 14:12:36,381 - root - INFO - Инициализация бота
2025-02-18 14:12:36,667 - root - INFO - Начало polling
2025-02-18 14:12:37,175 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:12:50,310 - root - INFO - Начало процесса получения мема
2025-02-18 14:13:00,274 - root - INFO - Начало процесса получения мема
2025-02-18 14:13:48,198 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 101, in map_httpcore_exceptions
    yield
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 256, in handle_async_request
    raise exc from None
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection_pool.py", line 236, in handle_async_request
    response = await connection.handle_async_request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\connection.py", line 103, in handle_async_request
    return await self._connection.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\http11.py", line 136, in handle_async_request
    raise exc
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\http11.py", line 106, in handle_async_request
    ) = await self._receive_response_headers(**kwargs)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\http11.py", line 177, in _receive_response_headers
    event = await self._receive_event(timeout=timeout)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_async\http11.py", line 217, in _receive_event
    data = await self._network_stream.read(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_backends\anyio.py", line 37, in read
    return b""
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpcore\_exceptions.py", line 14, in map_exceptions
    raise to_exc(exc) from exc
httpcore.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 292, in do_request
    res = await self._client.request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1540, in request
    return await self.send(request, auth=auth, follow_redirects=follow_redirects)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1629, in send
    response = await self._send_handling_auth(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1657, in _send_handling_auth
    response = await self._send_handling_redirects(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1694, in _send_handling_redirects
    response = await self._send_single_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_client.py", line 1730, in _send_single_request
    response = await transport.handle_async_request(request)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 394, in handle_async_request
    resp = await self._pool.handle_async_request(req)
  File "C:\Users\user\AppData\Local\Programs\Python\Python38-32\lib\contextlib.py", line 131, in __exit__
    self.gen.throw(type, value, traceback)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\httpx\_transports\default.py", line 118, in map_httpcore_exceptions
    raise mapped_exc(message) from exc
httpx.ReadError

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 753, in _network_loop_retry
    if not await do_action():
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 747, in do_action
    return action_cb_task.result()
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_updater.py", line 377, in polling_action_cb
    updates = await self.bot.get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 649, in get_updates
    updates = await super().get_updates(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 4366, in get_updates
    await self._post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 623, in _post
    return await self._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 355, in _do_post
    return await super()._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 652, in _do_post
    result = await request.post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 201, in post
    result = await self._request_wrapper(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 333, in _request_wrapper
    code, payload = await self.do_request(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_httpxrequest.py", line 316, in do_request
    raise NetworkError(f"httpx.{err.__class__.__name__}: {err}") from err
telegram.error.NetworkError: httpx.ReadError: 
2025-02-18 14:14:05,850 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:20:20,240 - root - INFO - Настройка логирования завершена
2025-02-18 14:20:21,372 - root - INFO - Инициализация бота
2025-02-18 14:20:21,736 - root - INFO - Начало polling
2025-02-18 14:20:22,433 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:21:05,855 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:22:53,131 - root - INFO - Настройка логирования завершена
2025-02-18 14:22:54,934 - root - INFO - Инициализация бота
2025-02-18 14:22:55,465 - root - INFO - Начало polling
2025-02-18 14:22:56,676 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:24:09,036 - root - INFO - Начало процесса получения мема
2025-02-18 14:24:42,179 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:28:03,668 - root - INFO - Настройка логирования завершена
2025-02-18 14:28:05,490 - root - INFO - Инициализация бота
2025-02-18 14:28:05,984 - root - INFO - Начало polling
2025-02-18 14:28:07,184 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:28:13,949 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_application.py", line 1335, in process_update
    await coroutine
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_handlers\basehandler.py", line 158, in handle_update
    return await self.callback(update, context)
  File "c:\nsda\Telegrammemebot\handlers\admin_handlers.py", line 34, in start_memes
    context.job_queue.run_repeating(send_random_meme, interval=interval, context={'channel_id': '@Sp1DShiz'})
TypeError: run_repeating() got an unexpected keyword argument 'context'
2025-02-18 14:28:32,927 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:29:57,578 - root - INFO - Настройка логирования завершена
2025-02-18 14:29:58,686 - root - INFO - Инициализация бота
2025-02-18 14:29:58,982 - root - INFO - Начало polling
2025-02-18 14:29:59,766 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:30:06,493 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_application.py", line 1335, in process_update
    await coroutine
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_handlers\basehandler.py", line 158, in handle_update
    return await self.callback(update, context)
  File "c:\nsda\Telegrammemebot\handlers\admin_handlers.py", line 34, in start_memes
    context.job_queue.run_repeating(send_random_meme, interval=interval, context={'channel_id': '@Sp1DShiz'})
TypeError: run_repeating() got an unexpected keyword argument 'context'
2025-02-18 14:30:20,991 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:37:48,737 - root - INFO - Настройка логирования завершена
2025-02-18 14:37:50,075 - root - INFO - Инициализация бота
2025-02-18 14:37:50,412 - root - INFO - Начало polling
2025-02-18 14:37:51,726 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:37:52,630 - root - INFO - Начало процесса получения мема
2025-02-18 14:38:06,851 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_application.py", line 1335, in process_update
    await coroutine
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_handlers\basehandler.py", line 158, in handle_update
    return await self.callback(update, context)
  File "c:\nsda\Telegrammemebot\handlers\admin_handlers.py", line 34, in start_memes
    context.job_queue.run_repeating(send_random_meme, interval=interval, context={'channel_id': CHANNEL_ID})
TypeError: run_repeating() got an unexpected keyword argument 'context'
2025-02-18 14:38:21,581 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:39:10,592 - root - INFO - Настройка логирования завершена
2025-02-18 14:39:11,898 - root - INFO - Инициализация бота
2025-02-18 14:39:12,228 - root - INFO - Начало polling
2025-02-18 14:39:12,905 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:39:16,396 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_application.py", line 1335, in process_update
    await coroutine
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_handlers\basehandler.py", line 158, in handle_update
    return await self.callback(update, context)
  File "c:\nsda\Telegrammemebot\handlers\admin_handlers.py", line 34, in start_memes
    context.job_queue.run_repeating(send_random_meme, interval=interval, context={'channel_id': CHANNEL_ID})
TypeError: run_repeating() got an unexpected keyword argument 'context'
2025-02-18 14:39:19,924 - root - INFO - Начало процесса получения мема
2025-02-18 14:39:37,021 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_application.py", line 1335, in process_update
    await coroutine
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_handlers\basehandler.py", line 158, in handle_update
    return await self.callback(update, context)
  File "c:\nsda\Telegrammemebot\handlers\admin_handlers.py", line 34, in start_memes
    context.job_queue.run_repeating(send_random_meme, interval=interval, context={'channel_id': CHANNEL_ID})
TypeError: run_repeating() got an unexpected keyword argument 'context'
2025-02-18 14:39:45,858 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:43:19,496 - root - INFO - Настройка логирования завершена
2025-02-18 14:43:20,596 - root - INFO - Инициализация бота
2025-02-18 14:43:20,909 - root - INFO - Начало polling
2025-02-18 14:43:21,733 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:43:30,655 - apscheduler.scheduler - INFO - Added job "send_random_meme" to job store "default"
2025-02-18 14:45:46,622 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_application.py", line 1335, in process_update
    await coroutine
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_handlers\basehandler.py", line 158, in handle_update
    return await self.callback(update, context)
  File "c:\nsda\Telegrammemebot\handlers\admin_handlers.py", line 47, in stop_memes
    scheduler.shutdown()
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\apscheduler\schedulers\asyncio.py", line 13, in wrapper
    self._eventloop.call_soon_threadsafe(wrapped)
AttributeError: 'NoneType' object has no attribute 'call_soon_threadsafe'
2025-02-18 14:45:51,908 - apscheduler.scheduler - INFO - Added job "send_random_meme" to job store "default"
2025-02-18 14:46:05,492 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:47:16,507 - root - INFO - Настройка логирования завершена
2025-02-18 14:47:18,077 - root - INFO - Инициализация бота
2025-02-18 14:47:18,434 - root - INFO - Начало polling
2025-02-18 14:47:19,223 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:47:25,264 - apscheduler.scheduler - INFO - Added job "send_random_meme" to job store "default"
2025-02-18 14:48:30,795 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:51:20,420 - root - INFO - Настройка логирования завершена
2025-02-18 14:51:21,991 - root - INFO - Инициализация бота
2025-02-18 14:51:22,923 - root - INFO - Начало polling
2025-02-18 14:51:23,719 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:51:30,068 - apscheduler.scheduler - INFO - Added job "send_random_meme" to job store "default"
2025-02-18 14:52:08,352 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:53:36,859 - root - INFO - Настройка логирования завершена
2025-02-18 14:53:40,157 - root - INFO - Инициализация бота
2025-02-18 14:53:40,829 - root - INFO - Начало polling
2025-02-18 14:53:41,825 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:53:46,421 - apscheduler.scheduler - INFO - Added job "send_random_meme" to job store "default"
2025-02-18 14:54:05,308 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:54:05,314 - root - INFO - Бот запущен и готов к работе.
2025-02-18 14:54:19,736 - root - INFO - Настройка логирования завершена
2025-02-18 14:54:20,761 - root - INFO - Инициализация бота
2025-02-18 14:54:21,070 - root - INFO - Начало polling
2025-02-18 14:54:21,817 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 14:54:26,910 - apscheduler.scheduler - INFO - Added job "send_random_meme" to job store "default"
2025-02-18 14:55:02,102 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 14:55:02,107 - root - INFO - Бот запущен и готов к работе.
2025-02-18 15:01:32,068 - root - INFO - Настройка логирования завершена
2025-02-18 15:01:33,516 - root - INFO - Инициализация бота
2025-02-18 15:01:33,987 - root - INFO - Начало polling
2025-02-18 15:01:34,810 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 15:01:40,731 - root - ERROR - Ошибка при запуске отправки мемов: name 'get_random_meme' is not defined
2025-02-18 15:01:47,725 - root - ERROR - Ошибка при запуске отправки мемов: name 'get_random_meme' is not defined
2025-02-18 15:01:54,023 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 15:01:54,026 - root - INFO - Бот запущен и готов к работе.
2025-02-18 15:02:42,294 - root - INFO - Настройка логирования завершена
2025-02-18 15:02:43,814 - root - INFO - Инициализация бота
2025-02-18 15:02:44,172 - root - INFO - Начало polling
2025-02-18 15:02:44,929 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 15:02:47,504 - root - INFO - Начало процесса получения мема
2025-02-18 15:03:07,691 - apscheduler.scheduler - INFO - Added job "send_random_meme" to job store "default"
2025-02-18 15:04:10,696 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 15:04:10,699 - root - INFO - Бот запущен и готов к работе.
2025-02-18 15:05:39,588 - root - INFO - Настройка логирования завершена
2025-02-18 15:05:40,900 - root - INFO - Инициализация бота
2025-02-18 15:05:41,191 - root - INFO - Начало polling
2025-02-18 15:05:41,949 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 15:06:13,373 - root - INFO - Начало процесса получения мема
2025-02-18 15:07:20,016 - root - INFO - Начало процесса получения мема
2025-02-18 15:07:28,859 - telegram.ext.Application - ERROR - No error handlers are registered, logging exception.
Traceback (most recent call last):
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_application.py", line 1335, in process_update
    await coroutine
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_handlers\basehandler.py", line 158, in handle_update
    return await self.callback(update, context)
  File "c:\nsda\Telegrammemebot\handlers\meme_handlers.py", line 66, in hentai_meme_command
    await update.message.reply_photo(photo=meme['url'], caption=caption)
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_message.py", line 2166, in reply_photo
    return await self.get_bot().send_photo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 2959, in send_photo
    return await super().send_photo(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 1402, in send_photo
    return await self._send_message(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 610, in _send_message
    result = await super()._send_message(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 745, in _send_message
    result = await self._post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 623, in _post
    return await self._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\ext\_extbot.py", line 355, in _do_post
    return await super()._do_post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\_bot.py", line 652, in _do_post
    result = await request.post(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 201, in post
    result = await self._request_wrapper(
  File "C:\nsda\Telegrammemebot\shiza\lib\site-packages\telegram\request\_baserequest.py", line 382, in _request_wrapper
    raise BadRequest(message)
telegram.error.BadRequest: Wrong type of the web page content
2025-02-18 15:07:39,362 - root - INFO - Начало процесса получения мема
2025-02-18 15:07:50,898 - root - INFO - Начало процесса получения мема
2025-02-18 15:08:29,311 - root - INFO - Начало процесса получения мема
2025-02-18 15:09:17,859 - root - INFO - Начало процесса получения мема
2025-02-18 15:09:51,226 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 15:09:51,229 - root - INFO - Бот запущен и готов к работе.
2025-02-18 15:17:00,051 - root - INFO - Настройка логирования завершена
2025-02-18 15:17:01,172 - root - INFO - Инициализация бота
2025-02-18 15:17:01,626 - root - INFO - Начало polling
2025-02-18 15:17:02,727 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 15:17:09,327 - root - INFO - Начало процесса получения мема
2025-02-18 15:27:54,681 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 15:27:54,823 - root - INFO - Бот запущен и готов к работе.
2025-02-18 15:31:13,667 - root - INFO - Настройка логирования завершена
2025-02-18 15:33:18,020 - root - INFO - Настройка логирования завершена
2025-02-18 15:33:26,922 - root - INFO - Инициализация бота
2025-02-18 15:33:30,296 - root - INFO - Начало polling
2025-02-18 15:33:33,168 - apscheduler.scheduler - INFO - Scheduler started
2025-02-18 15:33:51,204 - root - INFO - Начало процесса получения мема
2025-02-18 15:34:41,306 - root - INFO - Начало процесса получения Hentai видео
2025-02-18 15:34:55,489 - root - INFO - Начало процесса получения Hentai видео
2025-02-18 15:35:22,431 - apscheduler.scheduler - INFO - Scheduler has been shut down
2025-02-18 15:35:22,452 - root - INFO - Бот запущен и готов к работе.
2025-02-18 15:35:22,503 - asyncio - ERROR - Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x05BB0898>
2025-02-18 15:35:22,798 - asyncio - ERROR - Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x057F8958>
